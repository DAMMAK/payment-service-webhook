# ==========================================
# kafka-deployment.yaml
# ==========================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: payment-webhook
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/managed-by: argocd
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
        app.kubernetes.io/name: kafka
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        - name: wait-for-zookeeper
          image: busybox:1.35
          command:
            - sh
            - -c
            - |
              echo "Waiting for Zookeeper to be ready..."
              for i in $(seq 1 180); do
                if nc -z zookeeper-service 2181; then
                  echo "Zookeeper is ready!"
                  exit 0
                fi
                echo "Waiting for Zookeeper... ($i/180)"
                sleep 2
              done
              echo "Zookeeper failed to start within 360 seconds"
              exit 1
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:7.5.0
          ports:
            - containerPort: 9092
              name: plaintext
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper-service:2181"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:9092"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-service:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_LOG_DIRS
              value: "/var/lib/kafka/data"
            - name: KAFKA_LOG_RETENTION_HOURS
              value: "168"
            - name: CONFLUENT_METRICS_ENABLE
              value: "false"
            - name: CONFLUENT_SUPPORT_CUSTOMER_ID
              value: "anonymous"
            - name: KAFKA_JMX_PORT
              value: "9999"
            - name: KAFKA_JMX_HOSTNAME
              value: "localhost"
            - name: KAFKA_HEAP_OPTS
              value: "-Xmx512M -Xms512M"
            - name: KAFKA_LOG4J_LOGGERS
              value: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
            - name: tmp
              mountPath: /tmp
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "kafka-broker-api-versions --bootstrap-server localhost:9092"
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "kafka-broker-api-versions --bootstrap-server localhost:9092"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
      volumes:
        - name: kafka-data
          emptyDir: {}
        - name: tmp
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: payment-webhook
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/managed-by: argocd
spec:
  type: ClusterIP
  ports:
    - name: kafka
      port: 9092
      targetPort: 9092
      protocol: TCP
  selector:
    app: kafka

---